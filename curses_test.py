import curses
import time


class Test():

    def __init__(self):
        self.fonts = [0xF0,0x90,0x90,0x90,0xF0,0x20,0x60,0x20,0x20,0x70,0xF0,0x10,0xF0,0x80,0xF0,0xF0,0x10,0xF0,0x10,0xF0,0x90,0x90,0xF0,0x10,0x10,0xF0,0x80,0xF0,0x10,0xF0,0xF0,0x80,0xF0,0x90,0xF0,0xF0,0x10,0x20,0x40,0x40,0xF0,0x90,0xF0,0x90,0xF0,0xF0,0x90,0xF0,0x10,0xF0,0xF0,0x90,0xF0,0x90,0x90,0xE0,0x90,0xE0,0x90,0xE0,0xF0,0x80,0x80,0x80,0xF0,0xE0,0x90,0x90,0x90,0xE0,0xF0,0x80,0xF0,0x80,0xF0,0xF0,0x80,0xF0,0x80,0x80]
        self.fonts_ = [0xF0,0x90,0xF0,0xF0,0xF0,0xF0,0xF0,0xF0]

    def get_bin(self,num):
        return bin( num )[2:].zfill(8)


    def main(self, stdscr):

        for i in range(5):
            row_sprite_bin = self.get_bin(self.displaybuffer[i])
            for j in range(8):
                pixel = "██"*int(row_sprite_bin[j])
                stdscr.addstr(i,j*2,pixel)

        #stdscr.box("|", "-")
        stdscr.refresh()
        #stdscr.getkey()
        time.sleep(1)
        stdscr.clear()


    def run(self):
        curses.wrapper(self.main)



if False:
    t = Test()
    t.run()


    memory = ["a1","b1,","c1", "d1", "e1", "a2","b2,","c2", "d2", "e2"]

    n = 5
    offset = 0
    read_mem_bytes = memory[offset:offset+n+1]

    print(read_mem_bytes)

    for i in range(n):
        writing_byte = read_mem_bytes[i]
        print(writing_byte)


if __name__ == "__main__":
    import random

    while True:
        print(hex(random.randint(0,255)))
        time.sleep(1)